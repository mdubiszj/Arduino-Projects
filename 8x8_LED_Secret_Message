/*
 Michael Dubisz
 6/4/2023
 This program controls an 8x8 LED display to show a secret message

Here's where to find a pattern generator: https://www.instructables.com/DOT-Matrix-8x8-Using-Arduino/


 HARDWARE:
    - 8x8 LED Display with MAX7219 chip
*/


byte M[8] = {0x00,0x42,0x66,0x5A,0x42,0x42,0x42,0x00};
byte I[8] = {0x00,0x7E,0x18,0x18,0x18,0x18,0x7E,0x00};
byte K[8] = {0x00,0x66,0x6C,0x78,0x78,0x6C,0x66,0x00};
byte E[8] = {0x00,0x7E,0x60,0x7C,0x7C,0x60,0x7E,0x00};
byte pi[8] = {0x00,0x40,0x7E,0x26,0x24,0x24,0x26,0x00};
byte heart[8] = {0x66,0x99,0x81,0x81,0x81,0x42,0x24,0x18};
byte U[8] = {0x00,0x66,0x66,0x66,0x66,0x7E,0x3C,0x00};
byte smiley[8] = {0x00,0x24,0x24,0x24,0x00,0x42,0x3C,0x00};
byte winkey[8] = {0x00,0x22,0x24,0x2E,0x00,0x42,0x3C,0x00};

//const int MsgLength = 4;
//byte Msg[MsgLength] = [I, heart, U, winkey];


#include "LedControl.h"


#define DIN 2
#define CS  3
#define CLK 4

LedControl lc=LedControl(DIN, CLK, CS,1);


  //virtual grid to represent each LED
  byte leds[8];
  

  int numLedsOn = 0;
  int row = 0;
  int col = 0;
  int ledsInChar = 0;
  
  

void setup() {
  // Take the display out of shutdown mode
  lc.shutdown(0,false);
  // Set brightness (0 through 15)
  lc.setIntensity(0,0);
  // Clear the display
  lc.clearDisplay(0);  

  //initially turn all LED's on
  for(int i = 0; i<8; i++){
    leds[i] = 0xFF;
    lc.setRow(0, i, 0xFF);
    numLedsOn += 8;
  }
  delay(500);

  
  Serial.begin(9600);

}





void loop() {

//  printChar(M);
//  printChar(I);
//  printChar(K);
//  printChar(E);


  printChar(I);
  printChar(heart);
  printChar(U);
  //printChar(smiley);
  printChar(winkey);

}




//Use bitwise operators to read one bit out of a byte
bool getBit(byte b, int pos) {
  return (b >> pos) & 0x1;
}


//Use bitwise operators to write one bit into a byte
void setBit(byte& b, int pos, bool val){
  b = val ? (b | (0x01<<pos)) : (b & ~(0x01<<pos));
}


//uncover a character from a lit matrix then cover it again
void printChar(byte c[]){

  //count the number of on LEDs in the char
  ledsInChar = 0;
  for(int i = 0; i<8; i++){
    for(int j = 0; j<8; j++) {
      if (getBit(c[i],j)){
        ledsInChar++;
      }
    }
  }


  //turn off background LED's
  while(numLedsOn > ledsInChar){
    row = rand()%8;
    col = rand()%8;

    //if the random spot is on and it's not on the char, turn it off
    if(getBit(leds[row],col) && !getBit(c[7-col],7-row)){
      lc.setLed(0,row,col,LOW);
      setBit(leds[row],col, false);
      numLedsOn--;
      delay(10);
    } 
  }

  delay(1000);

  //turn on background LED's
  while(numLedsOn < 64){
    row = rand()%8;
    col = rand()%8;

    //if the random spot is off and it's not on the char, turn it on
    if(!getBit(leds[row],col) && !getBit(c[7-col],7-row)){
      lc.setLed(0,row,col,HIGH);
      setBit(leds[row],col, true);
      numLedsOn++;
      delay(10);
    } 
  }

  delay(100);
}



